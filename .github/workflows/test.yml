---
name: test
'on':
  push:
  pull_request:
    branches:
      # Branches from forks have the form 'user:branch-name'. Reference:
      # https://github.community/t/how-to-trigger-an-action-on-push-or-pull-request-but-not-both/16662/9
      - '**:**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.continue-on-error }}
    env:
      DJANGO_DATABASE_ENGINE: "${{ matrix.env.DJANGO_DATABASE_ENGINE || 'django.db.backends.sqlite3' }}"
      DJANGO_DATABASE_USER: django
      DJANGO_DATABASE_PASSWORD: passwd123
      DJANGO_DATABASE_NAME: db
      DJANGO_DATABASE_HOST: 127.0.0.1
      DJANGO_DATABASE_PORT: "${{ matrix.env.DJANGO_DATABASE_PORT }}"
      DOCKERIZE_VERSION: v0.6.1
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        django-version:
          - 'Django~=1.11.0'
          - 'Django~=2.2.0'
          - 'Django~=3.0.0'
          - 'Django~=3.1.0'
        docker-compose-services: ['']
        additional-dependencies: ['']
        continue-on-error: [false]

        include:
          - python-version: 3.8
            django-version: 'https://github.com/django/django/archive/master.zip'
            continue-on-error: true
          - python-version: 3.8
            django-version: 'Django~=3.0.0'
            docker-compose-services: postgresql-db
            additional-dependencies: psycopg2
            env:
              DJANGO_DATABASE_ENGINE: django.db.backends.postgresql
              DJANGO_DATABASE_PORT: 5432
            continue-on-error: false
          - python-version: 3.8
            django-version: 'Django~=3.0.0'
            docker-compose-services: mysql-db
            additional-dependencies: mysqlclient
            env:
              DJANGO_DATABASE_ENGINE: django.db.backends.mysql
              DJANGO_DATABASE_PORT: 3306
            continue-on-error: false

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: |
          curl -sSL \
            "https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py" | python
          # add `poetry` to `${PATH}`
          echo "${HOME}/.poetry/bin" >> ${GITHUB_PATH}

      - name: Set up cache
        uses: actions/cache@v1
        with:
          path: .venv
          key: venv-${{ matrix.python-version }}-${{ matrix.django-version }}-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: |
          source "$HOME/.poetry/env"
          poetry config virtualenvs.in-project true
          poetry install
          poetry run pip install \
            --upgrade \
          "${{ matrix.django-version }}" \
          ${{ matrix.additional-dependencies }}

      - name: Pull and build docker-compose services
        if: ${{ matrix.docker-compose-services }}
        run: |
          docker-compose pull ${{ matrix.docker-compose-services }}
          docker-compose up --detach ${{ matrix.docker-compose-services }}

      - name: Wait for docker-compose services
        if: ${{ matrix.docker-compose-services }}
        run: |
          wget \
            https://github.com/jwilder/dockerize/releases/download/${DOCKERIZE_VERSION}/dockerize-linux-amd64-${DOCKERIZE_VERSION}.tar.gz \
          && tar -C . -xzvf dockerize-linux-amd64-${DOCKERIZE_VERSION}.tar.gz \
          && rm dockerize-linux-amd64-${DOCKERIZE_VERSION}.tar.gz \
          && chmod +x dockerize
          ./dockerize \
            -wait "tcp://localhost:${{ matrix.env.DJANGO_DATABASE_PORT }}" \
            -wait-retry-interval "1s" \
            -timeout "30s"

      - name: "Run checks for python ${{ matrix.python-version }} and django ${{ matrix.django-version }}"
        run: |
          source "$HOME/.poetry/env"
          make test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml

      - name: Stop docker-compose services
        if: ${{ always() && matrix.docker-compose-services }}
        run: docker-compose down || true
